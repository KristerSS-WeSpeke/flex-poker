<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:integration="http://www.springframework.org/schema/integration"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-1.0.xsd
           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"
       default-autowire="byName">

    <security:http auto-config="true"/>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userBso">
            <security:password-encoder hash="sha" />
        </security:authentication-provider>
    </security:authentication-manager>

    <tx:annotation-driven />

    <context:component-scan base-package="com.flexpoker" />

    <!-- Embedded ActiveMQ broker-->
    <bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="vm:(broker:(tcp://localhost:61616)?persistent=false)?marshal=false"/>
    </bean>

    <!--  JMS Topic -->
    <bean id="chatTopic" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg value="sampletopic.flex.jms.chat"/>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost/flexpoker" />
        <property name="username" value="flexpoker" />
        <property name="password" value="flexpoker" />
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" />

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" />

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

    <bean name="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="database" value="MYSQL" />
        <property name="showSql" value="false" />
        <property name="generateDdl" value="true" />
    </bean>

    <bean id="actionOnTimerJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="actionOnTimerController" />
        <property name="targetMethod" value="decrementTime" />
    </bean>

    <bean id="actionOnTimerTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="actionOnTimerJob" />
        <property name="repeatInterval" value="1000" />
    </bean>

    <!-- set autowire="no" because the Factory Bean has a datasource property
         that will try to be injected with the datasource bean -->
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean" autowire="no">
        <property name="triggers">
            <list>
                <ref bean="actionOnTimerTrigger" />
            </list>
        </property>
    </bean>

</beans>
