<mx:Panel
   xmlns:mx="http://www.adobe.com/2006/mxml"
   xmlns:rend="renderers.*"
   xmlns:comp="components.*"
   label="Game {game.id}"
   creationComplete="initializeTable()"
   layout="horizontal"
   currentState="registeringState">
    <mx:Script>
    <![CDATA[

        import com.flexpoker.events.SendChatMessageEvent;
        import com.flexpoker.events.GamePanelCanceledEvent;
        import com.flexpoker.model.Game;
        import com.flexpoker.model.Table;
        import com.flexpoker.model.User;
        import com.flexpoker.model.PocketCards;
        import com.flexpoker.model.Deck;
        import mx.messaging.Consumer;
        import mx.messaging.ChannelSet;
        import mx.messaging.messages.IMessage;
        import mx.controls.Alert;
        import mx.rpc.events.FaultEvent;
        import mx.rpc.events.ResultEvent;
        import mx.messaging.messages.AsyncMessage;
        import com.flexpoker.util.RemoteObjectUtils;
        import mx.collections.ArrayCollection;
        import mx.messaging.messages.ErrorMessage;
        import flash.utils.Timer;
        import flash.events.TimerEvent;
        import mx.rpc.AsyncToken;
        import mx.rpc.AsyncResponder;

        public var game:Game;

        [Bindable]
        private var table:Table;

        [Bindable]
        private var pocketCards:PocketCards;

        public var channelSet:ChannelSet;

        private var startingTimer:Timer;

        [Bindable]
        private var userGameStatuses:ArrayCollection;

        [Bindable]
        private var actionOn:ArrayCollection = new ArrayCollection(new Array(false, false, false, false, false, false, false, false, false, false));

        private function initializeTable() {
            gameEventConsumer.subtopic = game.id.toString() + ".*";
            gameEventConsumer.subscribe();
            RemoteObjectUtils.addChannelSetToRemoteObject(mainRemoteObject);
            mainRemoteObject.joinGame(game);
        }
        
        private function gameEventMessageHandler(message:IMessage):void {
            if (message.headers.DSSubtopic.search("userJoinedGame") != -1) {
                mainRemoteObject.fetchAllUserGameStatuses(game);
                return;
            }

            if (message.headers.DSSubtopic.search("gameIsStarting") != -1) {
                startingTimer = new Timer(1000, 5);
                startingTimer.addEventListener("timer", timerHandler);
                startingTimer.addEventListener("timerComplete", timerCompleteHandler);
                startingTimer.start();
                currentState = "startingState";
                return;
            }

            if (message.headers.DSSubtopic.search("gameInProgress") != -1) {
                var token:AsyncToken = mainRemoteObject.fetchTable(game);
                token.addResponder(new AsyncResponder(
                    function(event:ResultEvent, token:Object = null):void {
                        table = event.result as Table;
                        tableEventConsumer.subtopic = table.id.toString() + ".*";
                        tableEventConsumer.subscribe();
                        mainRemoteObject.verifyGameInProgress(game);
                    },
                    function(event:FaultEvent, token:Object = null):void {
                        Alert.show("Send Failed: " + event.fault.faultString);
                    }
                ))
                currentState = "inProgressState";
                return;
            }

        }

        private function tableEventMessageHandler(message:IMessage):void {
            if (message.headers.DSSubtopic.search("newHandStarting") != -1) {
                var token:AsyncToken = mainRemoteObject.fetchTable(game);
                token.addResponder(new AsyncResponder(
                    function(event:ResultEvent, token:Object = null):void {
                        table = event.result as Table;
                        actionOn.setItemAt(true, table.actionOn.position - 1);
                    },
                    function(event:FaultEvent, token:Object = null):void {
                        Alert.show("Send Failed: " + event.fault.faultString);
                    }
                ))

                mainRemoteObject.fetchAllUserGameStatuses(game);
                mainRemoteObject.fetchPocketCards(table);
                return;
            }
        }

        private function fetchAllUserGameStatusesHandler(event:ResultEvent):void {
            userGameStatuses = event.result as ArrayCollection;
        }

        private function joinGameFaultHandler(event:FaultEvent):void {
            var errorMessage:ErrorMessage = event.message as ErrorMessage;
            Alert.show(errorMessage.rootCause.message);
            dispatchEvent(new GamePanelCanceledEvent(this));
        }

        private function timerHandler(event:TimerEvent):void {
            var timeLeft:int = 5 - startingTimer.currentCount
            startingLabel.text = timeLeft.toString();
        }

        private function timerCompleteHandler(event:TimerEvent):void {
            mainRemoteObject.verifyRegistrationForGame(game);
        }

        private function fetchPocketCardsHandler(event:ResultEvent):void {
            pocketCards = event.result as PocketCards;
            var deck:Deck = Deck.getInstance();
            pocketCardImage1 = deck.getCardImage(pocketCards.card1);
            pocketCardImage2 = deck.getCardImage(pocketCards.card2);
        }

        [Embed(source="/assets/Table.svg")]
        [Bindable]
        public var TableSvg:Class; 

        [Bindable]
        public var pocketCardImage1:Class;

        [Bindable]
        public var pocketCardImage2:Class;

    ]]>
    </mx:Script>

    <mx:states>
        <mx:State name="registeringState">
            <mx:RemoveChild target="{startingMain}" />
            <mx:RemoveChild target="{inProgressMain}" />
            <mx:RemoveChild target="{finishedMain}" />
            <mx:RemoveChild target="{startingRightPanel}" />
            <mx:RemoveChild target="{inProgressRightPanel}" />
            <mx:RemoveChild target="{finishedRightPanel}" />
            <mx:AddChild target="{registeringMain}" />
            <mx:AddChild target="{registeringRightPanel}" />
        </mx:State>
        <mx:State name="startingState">
            <mx:RemoveChild target="{registeringMain}" />
            <mx:RemoveChild target="{inProgressMain}" />
            <mx:RemoveChild target="{finishedMain}" />
            <mx:RemoveChild target="{registeringRightPanel}" />
            <mx:RemoveChild target="{inProgressRightPanel}" />
            <mx:RemoveChild target="{finishedRightPanel}" />
            <mx:AddChild target="{startingMain}" />
            <mx:AddChild target="{startingRightPanel}" />
        </mx:State>
        <mx:State name="inProgressState">
            <mx:RemoveChild target="{registeringMain}" />
            <mx:RemoveChild target="{startingMain}" />
            <mx:RemoveChild target="{finishedMain}" />
            <mx:RemoveChild target="{registeringRightPanel}" />
            <mx:RemoveChild target="{startingRightPanel}" />
            <mx:RemoveChild target="{finishedRightPanel}" />
            <mx:AddChild target="{inProgressMain}" />
            <mx:AddChild target="{inProgressRightPanel}" />
        </mx:State>
        <mx:State name="finishedState">
            <mx:RemoveChild target="{registeringMain}" />
            <mx:RemoveChild target="{startingMain}" />
            <mx:RemoveChild target="{inProgressMain}" />
            <mx:RemoveChild target="{registeringRightPanel}" />
            <mx:RemoveChild target="{startingRightPanel}" />
            <mx:RemoveChild target="{inProgressRightPanel}" />
            <mx:AddChild target="{finishedMain}" />
            <mx:AddChild target="{finishedRightPanel}" />
        </mx:State>
    </mx:states>

    <mx:Consumer id="gameEventConsumer" destination="gameStatusUpdates" channelSet="{channelSet}" message="gameEventMessageHandler(event.message)" />
    <mx:Consumer id="tableEventConsumer" destination="tableStatusUpdates" channelSet="{channelSet}" message="tableEventMessageHandler(event.message)" />

    <mx:RemoteObject id="mainRemoteObject" destination="flexController">
        <mx:method name="joinGame" fault="joinGameFaultHandler(event)" />
        <mx:method name="fetchAllUserGameStatuses" result="fetchAllUserGameStatusesHandler(event)" />
        <mx:method name="fetchPocketCards" result="fetchPocketCardsHandler(event)" />
    </mx:RemoteObject>

    <mx:VBox id="registeringMain" verticalAlign="middle" horizontalAlign="middle"
        height="100%" width="80%">
        <mx:HBox width="100%">
            <mx:Spacer width="100%"/><mx:Label text="Registering..." /><mx:Spacer width="100%"/>
        </mx:HBox>
    </mx:VBox>

    <mx:VBox id="startingMain" verticalAlign="middle" horizontalAlign="middle"
        height="100%" width="80%">
        <mx:HBox width="100%">
            <mx:Spacer width="100%"/>
                <mx:Label text="Starting in " />
                <mx:Label id="startingLabel" text="5" />
            <mx:Spacer width="100%"/>
        </mx:HBox>
    </mx:VBox>

    <mx:VBox id="inProgressMain" verticalAlign="middle" horizontalAlign="middle" height="100%"
        width="80%" backgroundImage="{TableSvg}">

        <mx:Spacer height="100%" />
        <mx:HBox width="100%">
            <mx:Spacer width="100%" />
            <comp:SeatPanel actionOn="{actionOn.getItemAt(1)}" userGameStatus="{table.seats.getItemAt(1).userGameStatus}" />
            <mx:Spacer width="25%" />
            <comp:SeatPanel actionOn="{actionOn.getItemAt(2)}" userGameStatus="{table.seats.getItemAt(2).userGameStatus}" />
            <mx:Spacer width="100%" />
        </mx:HBox>
        <mx:Spacer height="45%" />
        <mx:HBox width="100%">
            <mx:Spacer width="100%" />
            <comp:SeatPanel actionOn="{actionOn.getItemAt(0)}" userGameStatus="{table.seats.getItemAt(0).userGameStatus}" />
            <mx:Spacer width="100%" />
            <comp:SeatPanel actionOn="{actionOn.getItemAt(3)}" userGameStatus="{table.seats.getItemAt(3).userGameStatus}" />
            <mx:Spacer width="100%" />
        </mx:HBox>
        <mx:Spacer height="100%" />
        <mx:HBox width="100%">
            <mx:Spacer width="60%" />
            <comp:SeatPanel actionOn="{actionOn.getItemAt(9)}" userGameStatus="{table.seats.getItemAt(9).userGameStatus}" />
            <mx:Spacer width="100%" />
            <comp:SeatPanel actionOn="{actionOn.getItemAt(4)}" userGameStatus="{table.seats.getItemAt(4).userGameStatus}" />
            <mx:Spacer width="60%" />
        </mx:HBox>
        <mx:Spacer height="100%" />
        <mx:HBox width="100%">
            <mx:Spacer width="100%" />
            <comp:SeatPanel actionOn="{actionOn.getItemAt(8)}" userGameStatus="{table.seats.getItemAt(8).userGameStatus}" />
            <mx:Spacer width="100%" />
            <comp:SeatPanel actionOn="{actionOn.getItemAt(5)}" userGameStatus="{table.seats.getItemAt(5).userGameStatus}" />
            <mx:Spacer width="100%" />
        </mx:HBox>
        <mx:Spacer height="45%" />
        <mx:HBox width="100%">
            <mx:Spacer width="100%" />
            <comp:SeatPanel actionOn="{actionOn.getItemAt(7)}" userGameStatus="{table.seats.getItemAt(7).userGameStatus}" />
            <mx:Spacer width="25%" />
            <comp:SeatPanel actionOn="{actionOn.getItemAt(6)}" userGameStatus="{table.seats.getItemAt(6).userGameStatus}" />
            <mx:Spacer width="100%" />
        </mx:HBox>
        <mx:Spacer height="100%" />

    </mx:VBox>

    <mx:VBox id="finishedMain" verticalAlign="middle" horizontalAlign="middle"
        height="100%" width="80%">
        <mx:HBox width="100%">
            <mx:Spacer width="100%"/><mx:Label text="Finished..." /><mx:Spacer width="100%"/>
        </mx:HBox>
    </mx:VBox>

    <mx:VBox id="registeringRightPanel" height="100%" width="20%">
        <comp:UserGameStatusGrid height="50%" width="100%" userGameStatuses="{userGameStatuses}" />
        <mx:Spacer height="50%" width="100%" />
    </mx:VBox>

    <mx:VBox id="startingRightPanel" height="100%" width="20%">
        <comp:UserGameStatusGrid height="50%" width="100%" userGameStatuses="{userGameStatuses}" />
        <mx:Spacer height="50%" width="100%" />
    </mx:VBox>

    <mx:VBox id="inProgressRightPanel" height="100%" width="20%">
        <comp:UserGameStatusGrid height="35%" width="100%" userGameStatuses="{userGameStatuses}" />
        <comp:PokerActionBox height="35%" width="100%" />
        <mx:HBox height="30%" width="100%">
            <mx:Image id="myPocketCard1" height="100%" width="100%" source="{pocketCardImage1}" maintainAspectRatio="true" />
            <mx:Image id="myPocketCard2" height="100%" width="100%" source="{pocketCardImage2}" maintainAspectRatio="true" />
        </mx:HBox>
    </mx:VBox>

    <mx:VBox id="finishedRightPanel" height="100%" width="20%">
        <comp:UserGameStatusGrid height="50%" width="100%" userGameStatuses="{userGameStatuses}" />
        <mx:Spacer height="50%" width="100%" />
    </mx:VBox>

</mx:Panel>
